stages:
 - build_image
 - build_docs_test
 - test_pipeline
 - publish_docs
 - publish_image
 - scan_image

variables:
  FF_ENABLE_JOB_CLEANUP: true

.build_image_template:
  stage: build_image
  tags:
    - ruby
    - batch
  script:
    - . /collab/usr/gapps/lcweg/containers/scripts/enable-podman.sh || echo "enable-podman.sh exit code $?"
    - podman login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - podman build -f .docker/Dockerfile -t ${IMAGE_TAG} --build-arg BUILD_DATE=`date +%Y-%m-%d`
    - podman tag ${IMAGE_TAG} ${CI_REGISTRY_IMAGE}:latest
    - podman save ${IMAGE_TAG} > .docker/${IMAGE_TAG_FILENAME}.tar
  artifacts:
    when: on_success
    name: "${CI_MACHINE}-${CI_JOB_NAME}-${CI_JOB_STAGE}-${CI_COMMIT_REF_NAME}"
    paths:
      - .docker/${IMAGE_TAG_FILENAME}.tar
    expire_in: 3 day

.build_docs_test_template:
  stage: build_docs_test
  tags: batch
  script:
    - . /collab/usr/gapps/lcweg/containers/scripts/enable-podman.sh || echo "enable-podman.sh exit code $?"
    - podman load --input .docker/${IMAGE_TAG_FILENAME}.tar
    - podman run -i -v /etc/pki/ca-trust:/etc/pki/ca-trust:ro -v .:/satist ${IMAGE_TAG} -c "cd docs && make html"
  artifacts:
    paths:
      - docs/_build/html/

.publish_docs_template:
  stage: publish_docs
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags: shell
  script:
    - mv docs/_build/html/ public/
  artifacts:
    paths:
    - public/

.publish_image_template:
  stage: publish_image
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  tags: batch
  script:
    #- . /collab/usr/gapps/lcweg/containers/scripts/enable-podman.sh
    - podman load --input .docker/${IMAGE_TAG_FILENAME}.tar
    - podman tag ${IMAGE_TAG} ${CI_REGISTRY_IMAGE}:latest
    - podman login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - podman push "${IMAGE_TAG}" 
    - podman push "${CI_REGISTRY_IMAGE}:latest"

.build_test_pipeline:
  stage: test_pipeline
  tags: batch
  script:
    - . /collab/usr/gapps/lcweg/containers/scripts/enable-podman.sh || echo "enable-podman.sh exit code $?"
    - podman load --input .docker/${IMAGE_TAG_FILENAME}.tar
    - podman run -i -v /etc/pki/ca-trust:/etc/pki/ca-trust:ro -v .:/satist ${IMAGE_TAG} -c "python3"

.image_scanning_template:
  stage: scan_image
  tags: batch
  allow_failure: true
  script:
    - mkdir Anchore
    - wget --no-verbose https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b ./Anchore
    - mv install.sh syft_install.sh
    - bash syft_install.sh -b ./Anchore
    - wget --no-verbose https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b ./Anchore
    - mv install.sh grype_install.sh
    - bash grype_install.sh -b ./Anchore
    - Anchore/syft scan docker-archive:.docker/${IMAGE_TAG_FILENAME}.tar --scope all-layers -o syft-json=.docker/${IMAGE_TAG_FILENAME}_sbom_alllayers.json
    - Anchore/syft scan docker-archive:.docker/${IMAGE_TAG_FILENAME}.tar -o syft-json=.docker/${IMAGE_TAG_FILENAME}_sbom.json
    - Anchore/grype -o table sbom:.docker/${IMAGE_TAG_FILENAME}_sbom.json
    - Anchore/grype -o json --file .docker/${IMAGE_TAG_FILENAME}_container-scanning-report.json sbom:.docker/${IMAGE_TAG_FILENAME}_sbom.json
    - Anchore/grype -o cyclonedx-json --file .docker/${IMAGE_TAG_FILENAME}_sbom-report.cdx.json sbom:.docker/${IMAGE_TAG_FILENAME}_sbom.json
  artifacts:
    when: always
    name: "${CI_MACHINE}-${CI_JOB_NAME}-${CI_JOB_STAGE}-${CI_COMMIT_REF_NAME}"
    paths:
      - .docker/${IMAGE_TAG_FILENAME}_sbom.json
      - .docker/${IMAGE_TAG_FILENAME}_sbom_alllayers.json
      - .docker/${IMAGE_TAG_FILENAME}_container-scanning-report.json
      - .docker/${IMAGE_TAG_FILENAME}_sbom-report.cdx.json
    reports:
      container_scanning: .docker/${IMAGE_TAG_FILENAME}_container-scanning-report.json
      cyclonedx: .docker/${IMAGE_TAG_FILENAME}_sbom-report.cdx.json

include:
  - project: 'lc-templates/id_tokens'
    file: 'id_tokens.yml'
  - local: .gitlab/subscribed_pipelines.yml
